{"version":3,"file":"static/js/880.66d66b10.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-transition-group/esm/CSSTransition.js","Detail.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport { Nav, Card } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\n\r\nlet 박스 = styled.div`\r\n  padding : 20px;\r\n `;\r\n\r\nlet 제목 = styled.h4`\r\n  font-size : 25px;\r\n  float: left;\r\n  width: 600px;\r\n  color : ${props => props.색상} \r\n`;\r\n\r\n\r\nfunction Detail(props) {\r\n\r\n  let [recentlist, recentlist변경] = useState(true);\r\n  useEffect(()=>{\r\n    let recentItem = JSON.parse(localStorage.getItem('최근본상품'));\r\n    let recentItemidx = recentItem.indexOf(id);\r\n    let tmparray = [...recentItem];\r\n    if(recentItemidx != -1){\r\n      tmparray.splice(recentItemidx, 1);\r\n    }\r\n    tmparray.unshift(id);\r\n    if(tmparray.length>5){\r\n      tmparray.pop();\r\n    }\r\n    localStorage.setItem('최근본상품', JSON.stringify(tmparray));\r\n  }, [recentlist]);\r\n\r\n  let [alert창, alert창변경] = useState(true);\r\n\r\n  let [탭UI, 탭UI변경] = useState({\r\n    info : <p>상품정보</p>,\r\n    shipping: <p>배송정보</p>,\r\n    refund: <p>환불약관</p>\r\n  })\r\n  \r\n  let [탭UI상태, 탭UI상태변경] = useState('info');\r\n\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let 타이머 = setTimeout(() => { alert창변경(false) }, 2000);\r\n    return () => { clearTimeout(타이머) }\r\n  }, [alert창]);  //alert창이라는 state가 update될때만 실행해주세요\r\n\r\n\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  let 찾은상품 = props.shoes.find(function (상품) {\r\n    return 상품.id == id;\r\n  });\r\n\r\n  let tmparray2 = JSON.parse(localStorage.getItem('최근본상품'));\r\n  tmparray2.shift();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <박스>\r\n          <제목 className=\"red\" >Detail</제목>\r\n          <button onClick={()=>{ history.push('/cart') }}>🛒</button>\r\n        </박스>\r\n\r\n        {\r\n          alert창 === true && 찾은상품.quan<10\r\n            ? <div className=\"my-alert2\">\r\n              <p>재고가 얼마 남지 않았습니다!</p>\r\n            </div>\r\n            : null\r\n        }\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={찾은상품.shoesimg} width=\"100%\" />\r\n          </div>\r\n          <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{찾은상품.name}</h4>\r\n            <p>{찾은상품.content}</p>\r\n            <p>{찾은상품.price}원</p>\r\n            <Info 찾은상품={찾은상품}></Info>\r\n            <button className=\"btn btn-danger\" onClick={() => {\r\n              props.dispatch({type:'항목추가', payload: {id: 찾은상품.id, name:찾은상품.name, quan:1, price:찾은상품.price}})\r\n            }}>주문하기</button>\r\n            <button className=\"btn btn-danger\" onClick={() => { history.push('/'); }}>뒤로가기</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {\r\n            tmparray2.map((최근상품하나, i)=>{\r\n              let 최근상품idx = props.shoes.findIndex(a => a.id == 최근상품하나);\r\n              return(\r\n              <RecentItemCard recentlist변경={recentlist변경} 상품이미지={props.shoes[최근상품idx].shoesimg} 상품이름={props.shoes[최근상품idx].name} id={최근상품idx} key={i} recentlist={recentlist} ></RecentItemCard>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"/home\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-0\" onClick={()=>{ 스위치변경(false);\r\n            탭UI상태변경('info'); }}>상품정보</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" onClick={()=>{  스위치변경(false);\r\n            탭UI상태변경('shipping'); }}>배송관련</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-2\" onClick={()=>{  스위치변경(false);\r\n            탭UI상태변경('refund');  }}>환불약관</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n       <TabContent 스위치변경={스위치변경} 탭UI={탭UI} 탭UI상태={탭UI상태}></TabContent>\r\n      </CSSTransition>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction RecentItemCard(props){\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div onClick={()=>{props.recentlist변경(!props.recentlist); history.push('/detail/'+ props.id)}}>\r\n      <Card className=\"col-md-2\">\r\n        <Card.Img variant=\"top\" src={props.상품이미지} />\r\n        <Card.Body>\r\n          <Card.Text>\r\n            {props.상품이름}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>     \r\n  )\r\n}\r\n \r\nfunction TabContent(props) {\r\n  useEffect(() => {\r\n    props.스위치변경(true);\r\n  });\r\n  return (\r\n    <div>\r\n      {\r\n        props.탭UI[props.탭UI상태]\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Info(props) {\r\n  return (\r\n    <p>재고 : {props.찾은상품.quan}</p>\r\n  )\r\n}\r\n\r\nfunction state를props화(state) {\r\n  return {\r\n      state: state.reducer\r\n  }\r\n}\r\n\r\nexport default connect(state를props화)(Detail)"],"names":["CardImg","React","ref","bsPrefix","className","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","removeClass","node","classes","split","forEach","c","removeOneClass","CSSTransition","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","scrollTop","addOneClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","Transition","_extends","propTypes","박스","styled","제목","색상","RecentItemCard","history","useHistory","onClick","recentlist변경","recentlist","push","id","src","상품이미지","상품이름","TabContent","useEffect","스위치변경","탭UI","탭UI상태","Info","찾은상품","quan","connect","state","reducer","useState","recentItem","JSON","parse","localStorage","getItem","recentItemidx","indexOf","tmparray","splice","unshift","pop","setItem","stringify","alert창","alert창변경","info","shipping","refund","탭UI상태변경","스위치","타이머","setTimeout","clearTimeout","useParams","shoes","find","상품","tmparray2","shift","shoesimg","width","name","content","price","dispatch","payload","map","최근상품하나","i","최근상품idx","findIndex","a","Nav","defaultActiveKey","eventKey","in","timeout"],"sourceRoot":""}